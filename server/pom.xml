<project 
	xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>

	<groupId>oculus.app.sample</groupId>
	<artifactId>bootstrap</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>My aperturejs Web App</name>
	<description>This project contains a sample "Hello World" client and server application for aperture.</description>

	<properties>
		<!-- Implied environment=development if environment property not set -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<aperture.version>1.0.7</aperture.version>
	</properties>

	<dependencies>
		<!-- TODO Remove, replace with bower -->
		<dependency>
			<groupId>oculus.aperture</groupId>
			<artifactId>aperture-client</artifactId>
			<version>${aperture.version}</version>
			<type>jar</type>
		</dependency>
		
		<dependency>
			<groupId>oculus.aperture</groupId>
			<artifactId>aperture-spi</artifactId>
			<version>${aperture.version}</version>
			<type>jar</type>
		</dependency>
		
		<dependency>
			<groupId>oculus.aperture</groupId>
			<artifactId>aperture-server-core</artifactId>
			<version>${aperture.version}</version>
			<type>jar</type>
		</dependency>
		
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>2.6.5</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-web</artifactId>
			<version>2.0.4</version>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.1</version>
			<scope>runtime</scope> <!-- change this to compile if needed for tests -->
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.0</version>
			<scope>test</scope>
		</dependency>
		
	</dependencies>

	<build>
		<resources>
			<!-- Resources to filter -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.js</include>
				</includes>
			</resource>

			<!-- Resources to leave alone -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.properties</exclude>
					<exclude>**/*.js</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>
			<!-- | Create a "Build Number" that contains the time of the build (available
				as ${buildNumber}) -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.0-beta-1</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
					<format>{0,date,yyyy-MM-dd HH:mm:ss}</format>
					<items>
						<item>timestamp</item>
					</items>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- Development Profile exposes raw webapp resources and provides access to test files -->
		<profile>
			<id>Development</id>
			
			<activation>
				<property>
					<name>!environment</name>
				</property>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<overlays>
								<!-- Overlay client JS files -->
								<!-- TODO: Replace with bower -->
								<overlay>
									<groupId>oculus.aperture</groupId>
									<artifactId>aperture-client</artifactId>
									<type>jar</type>
									<targetPath>aperture</targetPath>
								</overlay>
							</overlays>
						</configuration>
					</plugin>

					<plugin>
						<!-- Jetty For Dev Builds Only -->
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<version>9.1.5.v20140505</version>
						<configuration>

							<reload>manual</reload>

							<scanTargetPatterns>
								<scanTargetPattern>
									<directory>src/main/resources</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</scanTargetPattern>
							</scanTargetPatterns>

							<webAppConfig>
								<contextPath>/</contextPath>
								<baseResource
									implementation="org.eclipse.jetty.util.resource.ResourceCollection">
									<!-- Use the development (source) code -->
									<resourcesAsCSV>src/main/webapp,src/test/webapp,${project.build.directory}/${project.build.finalName}</resourcesAsCSV>
								</baseResource>

								<!-- Specify an override web XML to use alternate configuration with no caching -->
								<!-- Comment out to use defaults: -->
								<overrideDescriptor>src/main/config/dev-override-web.xml</overrideDescriptor>

							</webAppConfig>

						</configuration>

						<dependencies>
							<dependency>
								<groupId>org.eclipse.jetty</groupId>
								<artifactId>jetty-server</artifactId>
								<version>9.4.55.v20240627</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Deployment Profile Runs optimized version of JavaScript -->
		<profile>
			<id>Deployment</id>

			<activation>
				<property>
					<name>environment</name>
					<value>deployment</value>
				</property>
			</activation>

			<build>
				<plugins>
					<!-- 
						Build client-side:
						npm install
						bower install
						gulp build 
					-->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<id>npm-install</id>
								<phase>initialize</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${exec.npm}</executable>
									<workingDirectory>${basedir}/../client</workingDirectory>
									<arguments>
										<argument>install</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>bower-install</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${exec.bower}</executable>
									<workingDirectory>${basedir}/../client</workingDirectory>
									<arguments>
										<argument>install</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>gulp-build</id>
								<phase>compile</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${exec.gulp}</executable>
									<workingDirectory>${basedir}/../client</workingDirectory>
									<arguments>
										<argument>build</argument>
									</arguments>
									<environmentVariables>
									    <NODE_ENV>production</NODE_ENV>
									</environmentVariables>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- WAR configuration -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<webResources>
					            <resource>
					                <directory>../client/dist</directory>
					            </resource>
					        </webResources>
							<overlays>
								<!-- Overlay aperture.js files -->
								<overlay>
									<groupId>oculus.aperture</groupId>
									<artifactId>aperture-client</artifactId>
									<type>jar</type>
									<targetPath>aperture</targetPath>
								</overlay>
							</overlays>
						</configuration>
					</plugin>

					<!-- Jetty configuration -->
					<plugin>
						<!-- Jetty For Dev Builds Only -->
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<version>9.1.5.v20140505</version>
						<configuration>

							<reload>manual</reload>

							<scanTargetPatterns>
								<scanTargetPattern>
									<directory>src/main/resources</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</scanTargetPattern>
							</scanTargetPatterns>

							<webAppConfig>
								<contextPath>/</contextPath>
								<baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
									<!-- Use the "built" version of the JS code (been run through the RequireJS optimizer) -->
									<resourcesAsCSV>${project.build.directory}/${project.build.finalName}</resourcesAsCSV>
								</baseResource>
							</webAppConfig>
						</configuration>

						<dependencies>
							<dependency>
								<groupId>org.eclipse.jetty</groupId>
								<artifactId>jetty-server</artifactId>
								<version>9.4.55.v20240627</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>


		<!-- Windows Profile - run windows-specific client tooling -->
		<profile>
			<id>windows</id>
			<activation>
				<os>
					<family>Windows</family>
				</os>
			</activation>
			<properties>
				<exec.npm>npm</exec.npm>
				<exec.bower>${basedir}/../client/node_modules/.bin/bower</exec.bower>
				<exec.gulp>${basedir}/../client/node_modules/.bin/gulp</exec.gulp>
			</properties>
		</profile>

		<!-- *nix Profile - run unix requireJs compiler -->
		<profile>
			<id>unix</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<properties>
				<exec.npm>npm</exec.npm>
				<exec.bower>${basedir}/../client/node_modules/.bin/bower</exec.bower>
				<exec.gulp>${basedir}/../client/node_modules/.bin/gulp</exec.gulp>
			</properties>
		</profile>
	</profiles>
</project>
